{
	"info": {
		"_postman_id": "c370b46c-aa4f-4a69-84f4-0a72e106776f",
		"name": "Cake",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35576573"
	},
	"item": [
		{
			"name": "Register user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"email\", jsonData.email);\r",
							"\r",
							"console.log(jsonData.registration_type);\r",
							"console.log(jsonData.email);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Registration was successful\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"REGISTERED\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					},
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"{{$randomFirstName}}\",\r\n    \"last_name\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"locale\": \"sv_SE\",\r\n    \"subscribed_on_news\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}auth/register/",
					"host": [
						"{{Base_URL}}auth"
					],
					"path": [
						"register",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Log in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.email);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Authorisation was successful\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					},
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}auth/login/",
					"host": [
						"{{Base_URL}}auth"
					],
					"path": [
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cart (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Cart is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bakery_orders).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					}
				],
				"url": {
					"raw": "{{Base_URL}}store/cart/",
					"host": [
						"{{Base_URL}}store"
					],
					"path": [
						"cart",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Stockholm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					}
				],
				"url": {
					"raw": "{{Base_URL}}store/cities/stockholm/?country=SE",
					"host": [
						"{{Base_URL}}store"
					],
					"path": [
						"cities",
						"stockholm",
						""
					],
					"query": [
						{
							"key": "country",
							"value": "SE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a product to the cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					},
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"client_id\": \"1fef9e20-9a81-4f91-99e4-1837cc159357{{$randomIP}}2024-07-22\",\r\n        \"product\": 1958,\r\n        \"quantity\": 1,\r\n        \"parent_type\": null,\r\n        \"order_lines\": []\r\n    }\r\n]\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}store/cart/order-lines/",
					"host": [
						"{{Base_URL}}store"
					],
					"path": [
						"cart",
						"order-lines",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cart (not empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Cart is not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bakery_orders).not.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					}
				],
				"url": {
					"raw": "{{Base_URL}}store/cart/",
					"host": [
						"{{Base_URL}}store"
					],
					"path": [
						"cart",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Log out",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					}
				],
				"url": {
					"raw": "{{Base_URL}}auth/logout/",
					"host": [
						"{{Base_URL}}auth"
					],
					"path": [
						"logout",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cart (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Cart is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bakery_orders).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					}
				],
				"url": {
					"raw": "{{Base_URL}}store/cart/",
					"host": [
						"{{Base_URL}}store"
					],
					"path": [
						"cart",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Log in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.email);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Authorisation was successful\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					},
					{
						"key": "content-type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}auth/login/",
					"host": [
						"{{Base_URL}}auth"
					],
					"path": [
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cart (not empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Cart is not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bakery_orders).not.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					}
				],
				"url": {
					"raw": "{{Base_URL}}store/cart/",
					"host": [
						"{{Base_URL}}store"
					],
					"path": [
						"cart",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					}
				],
				"url": {
					"raw": "{{Base_URL}}store/cart/",
					"host": [
						"{{Base_URL}}store"
					],
					"path": [
						"cart",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cart (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Cart is empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.bakery_orders).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "sv, en"
					}
				],
				"url": {
					"raw": "{{Base_URL}}store/cart/",
					"host": [
						"{{Base_URL}}store"
					],
					"path": [
						"cart",
						""
					]
				}
			},
			"response": []
		}
	]
}